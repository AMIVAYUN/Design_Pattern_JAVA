package TemplateMethodPattern;

public class Main_Temp_P {
    /**
     * 알고리즘의 일부를 서브클래스에서 재정의 하도록 만든 패턴
     * 일부를 서브클래스 정의 상위 클래스는 뼈대를 정의
     * 문제 : 알고리즘을 캡슐화 시키면서 중복되는 코드가 여러 존재할 수 있다.
     * 해결방안: 알고리즘의 중복되는 코드를 줄이고 달라지는 부분만 서브클래스에서 구현
     * 결과: 중복되는 코드가 줄음 유지 보수에 유리 ex) 커피와 홍차 끓이기
     * 템플릿 메소드를 이용해서 프로그램을 설계하면서 "
     * 우리가 연락할 테니 먼저 연락하지 마"라고 얘기하
     * 는 셈
     *  헐리우드 원칙
     *  저수준(low level) 구성 요소에서 시스템에 접속할 수 있지
     * 만, 언제 어떤 식으로 그 구성요소들을 사용할지는 고수준
     * 구성요소에서 결정
     * 고수준
     * 구성요소
     * 저수준
     * 구성요소 1
     * 저수준
     * 구성요소 2
     * @param args
     */
    public static void main(String[] args){

    }
}
